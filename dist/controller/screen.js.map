{"version":3,"sources":["../../src/controller/screen.js"],"names":["config","db","api","post","req","res","total","screen","Screen","reqObj","JSON","parse","stringify","body","name","rows","Array","seatInfo","length","no","key","console","log","numberOfSeats","row","Object","seats","j","aisleSeats","totalSeats","save","err","code","status","json","message","send","findOne","params","e","seat","arr","p","k","undefined","get","avail","pos","num","Number","query","numSeats","choice","seatno","seatsAvail","lef","rig","y","ar","push","find","screens","retrn","keys","delete","findById","screenid","remove","_id"],"mappings":"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","file":"screen.js","sourcesContent":["import {Router} from 'express';\nimport mongoose from 'mongoose';\nimport bodyParser from 'body-parser';\nimport config from '../config';\nimport Screen from '../model/screen';\n\nexport default({config, db}) => {\n  let api = Router();\n\n  //Add a new Screen\n  //'api/v1/screens'\n  // Storing theatre seats in form of matrix\n  // 0 and 9 for unreserved, 9 for aisle seats\n  // row is represented by array of numbers.\n  // controller converts seats info to array of number and store in database\n  api.post('/', (req, res) => {\n    let total = 0;\n    let screen = new Screen();\n    let reqObj = JSON.parse(JSON.stringify(req.body));\n    screen.name = reqObj.name;\n    screen.rows = new Array(reqObj.seatInfo.length);\n    let no = 0;\n    for (var key in reqObj.seatInfo) {\n      console.log('2: ' + reqObj.seatInfo[key].numberOfSeats);\n      let row = new Object();\n      row.name = key;\n      row.seats = new Array(reqObj.seatInfo[key].numberOfSeats)\n      for (let j = 0; j < reqObj.seatInfo[key].numberOfSeats; j++) {\n        row.seats[j] = 0;\n      }\n      for (let j = 0; j < reqObj.seatInfo[key].aisleSeats.length; j++) {\n        row.seats[reqObj.seatInfo[key].aisleSeats[j]] = 9;\n      }\n      total += reqObj.seatInfo[key].numberOfSeats;\n      screen.rows[no++] = row;\n    }\n    screen.totalSeats = total;\n    screen.save(function(err) {\n      if (err) {\n        if (err.code == 11000) {\n          res.status(400);\n          res.json({message: 'Screen with same name alread exist.'});\n          return;\n        }\n        res.status(500);\n        res.send(err);\n        return;\n      } else {}\n      res.status(201);\n      res.json({message: 'Screen Created successfully'});\n    });\n  });\n\n  //Reserve\n  //'api/v1/:name/reserve'\n  api.post('/:name/reserve', (req, res) => {\n    Screen.findOne({\n      name: req.params.name\n    }, (err, screen) => {\n      if (err) {\n        res.status(500);\n        res.send(err);\n        return;\n      } else if (!screen) {\n        res.status(204);\n        res.json({message: 'Screen Not Found'});\n        return;\n      } else {\n        let reqObj = JSON.parse(JSON.stringify(req.body));\n        for (var key in reqObj.seats) {\n          let e = true;\n          let seat = new Object();\n          seat.name = key;\n          for (let j = 0; j < screen.rows.length; j++) {\n            if (screen.rows[j].name == seat.name) {\n              e = false;\n              let arr = new Array(screen.rows[j].seats.length);\n              for (let p = 0; p < screen.rows[j].seats.length; p++) {\n                arr[p] = screen.rows[j].seats[p];\n              }\n              for (let k = 0; k < reqObj.seats[key].length; k++) {\n                if (screen.rows[j].seats[reqObj.seats[key][k]] == 2 || screen.rows[j].seats[reqObj.seats[key][k]] == undefined) {\n                  res.status(406).json({message: 'All Seats are not available'});\n                  return;\n                } else {\n                  arr[reqObj.seats[key][k]] = 2;\n                }\n                screen.rows[j].seats = arr;\n              }\n            }\n          }\n          if (e == true) {\n            res.status(406).json({message: 'All Seats are not available'});\n            return;\n          }\n        }\n        console.log(screen.rows[0]);\n        screen.save(function(err) {\n          if (err) {\n            res.status(500);\n            res.send(err);\n            return;\n          } else {\n            res.status(201);\n            res.json({message: 'Booking done successfully'});\n            return;\n          }\n        });\n      }\n    });\n  });\n\n  //Get Available Seats\n  //'/api/v1/:name/available'\n  api.get('/:name/available', (req, res) => {\n    Screen.findOne({\n      name: req.params.name\n    }, (err, screen) => {\n      if (err) {\n        res.status(500);\n        res.send(err);\n        return;\n      } else if (!screen) {\n        res.status(204);\n        res.json({message: 'Screen Not Found'});\n        return;\n      } else {\n        let avail = new Object();\n        let seats = new Object();\n        for (let j = 0; j < screen.rows.length; j++) {\n          let arr = new Array();\n          let pos = 0;\n          for (let k = 0; k < screen.rows[j].seats.length; k++) {\n            if (screen.rows[j].seats[k] == 0 || screen.rows[j].seats[k] == 9) {\n              arr[pos++] = k;\n            }\n          }\n          seats[screen.rows[j].name] = arr;\n        }\n        avail[\"seats\"] = seats;\n        res.status(200);\n        res.json(avail);\n      }\n    });\n  });\n\n  //Available Tickets\n  //'/api/v1/screens/:name/seats'\n  api.get('/:name/seats', (req, res) => {\n    let num = Number(req.query.numSeats);\n    let row = req.query.choice[0];\n    let seatno = Number(req.query.choice[1]);\n    Screen.findOne({\n      name: req.params.name\n    }, (err, screen) => {\n      if (err) {\n        console.log(err);\n        res.status(500);\n        res.send(err);\n        return;\n      } else if (!screen) {\n        res.status(204);\n        res.json({message: 'Screen Not Found'});\n        return;\n      } else if (num == undefined || row == undefined || seatno == undefined) {\n        res.status(204);\n        res.json({message: 'Invalid Query Parameters'});\n        return;\n      } else {\n        let avail = new Object();\n        let seatsAvail = new Object();\n        for (let j = 0; j < screen.rows.length; j++) {\n          let arr = new Array();\n          if (screen.rows[j].name == row) {\n            let lef = ((seatno + 1) - num) >= 0\n              ? (seatno + 1) - num\n              : 0;\n            let rig = ((seatno - 1) + num) <= screen.rows[j].seats.length\n              ? (seatno - 1) + num\n              : 0;\n            while ((rig - lef + 1) >= num) {\n              let y = lef;\n              let no = 0;\n              let ar = new Array();\n              for (; y < (lef + num); y++) {\n                if (screen.rows[j].seats[y] == 2 || (screen.rows[j].seats[y] == 9 && !(no < num)))\n                  break;\n                else {\n                ar[no] = y;\n                console.log('1:' + ar);\n                no++;\n                console.log('No: ' + no);\n                }\n              }\n              if (no == num) {\n                console.log('2:' + ar);\n                arr.push(ar);\n                console.log(seatsAvail);\n              }\n              lef++;\n            }\n          }\n          if (screen.rows[j].name == row)\n            seatsAvail[screen.rows[j].name] = arr;\n          }\n\n        avail[\"availableseats\"] = seatsAvail;\n        res.status(200);\n        res.json(avail);\n      }\n    });\n  });\n\n  //Get All Screens\n  //'/api/v1/screens/'\n  api.get('/', (req, res) => {\n    Screen.find({}, (err, screens) => {\n      if (err) {\n        res.status(500);\n        res.send(err);\n        retrn;\n      } else if (Object.keys(screens).length === 0) {\n        res.status(204).json({message: 'No Screens Present'});\n      } else {\n        res.status(200);\n        res.json(screens);\n      }\n    });\n  });\n\n  // Get Screen By Name\n  // '/api/v1/screens/:id'\n  api.get('/:name', (req, res) => {\n    Screen.find({\n      name: req.params.name\n    }, (err, screen) => {\n      if (err) {\n        res.status(500);\n        res.send(err);\n        return;\n      } else if (!screen) {\n        res.status(204);\n        res.json({message: 'Screen Not Found'});\n        return;\n      } else {\n        res.status(200);\n        res.json(screen);\n      }\n    });\n  });\n\n  //Delete Screen\n  // '/ai/v1/screens/:screenid'\n  api.delete('/:screenid', (req, res) => {\n    Screen.findById(req.params.screenid, (err, screen) => {\n      if (err) {\n        res.status(500);\n        res.send(err);\n        return;\n      } else if (!screen) {\n        res.status(204);\n        res.json({message: 'No Screen Present'});\n        return;\n      } else {\n        Screen.remove({\n          _id: req.params.screenid\n        }, (err) => {\n          if (err) {\n            res.status(500);\n            res.send(err);\n          }\n          res.status(200);\n          res.json({message: 'Screen Removed successfully'});\n        });\n      }\n    });\n  });\n\n  return api;\n}\n"]}